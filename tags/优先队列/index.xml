<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>优先队列 on My New Hugo Site</title>
    <link>http://localhost:1313/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</link>
    <description>Recent content in 优先队列 on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Dec 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>算法之优先队列</title>
      <link>http://localhost:1313/post/golang/%E7%AE%97%E6%B3%95%E4%B9%8B%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/index.zh-cn/</link>
      <pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/golang/%E7%AE%97%E6%B3%95%E4%B9%8B%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/index.zh-cn/</guid>
      <description>优先队列用来求数组里面的前n个最大，最小值很有用。&#xA;最小堆 最大最小堆是一种数据结构，用于在数据集合中快速找到最大或最小元素。堆是一种二叉树，其中每个父节点的值都大于或小于其两个子节点的值，具体来说，如果父节点的值大于子节点的值，则为最大堆；如果父节点的值小于子节点的值，则为最小堆。&#xA;// This example demonstrates an integer heap built using the heap interface. package main import ( &amp;#34;container/heap&amp;#34; &amp;#34;fmt&amp;#34; ) // An IntHeap is a min-heap of ints. type IntHeap []int func (h IntHeap) Len() int { return len(h) } // 最大堆用 &amp;gt; func (h IntHeap) Less(i, j int) bool { return h[i] &amp;lt; h[j] } func (h IntHeap) Swap(i, j int) { h[i], h[j] = h[j], h[i] } func (h *IntHeap) Push(x any) { // Push and Pop use pointer receivers because they modify the slice&amp;#39;s length, // not just its contents.</description>
    </item>
  </channel>
</rss>
